services:
  postgres-infisical:
    container_name: postgres-infisical
    image: postgres:14-alpine
    env_file: .env.secrets
    pull_policy: always
    restart: unless-stopped
    volumes:
      - postgres_infisical:/var/lib/postgresql/data
    networks:
      - main
    ports:
      - ${POSTGRES_PORT_EXT}:${POSTGRES_PORT_INT}
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
      interval: 5s
      timeout: 10s
      retries: 10

  redis-infisical:
    container_name: redis-infisical
    image: redis
    env_file: .env.secrets
    pull_policy: always
    restart: unless-stopped
    volumes:
      - redis_infisical:/data
    networks:
      - main
    ports:
      - ${REDIS_PORT_EXT}:${REDIS_PORT_INT}
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  infisical-migration:
    container_name: infisical-migration
    image: infisical/infisical:latest-postgres
    env_file: .env.secrets
    pull_policy: always
    restart: unless-stopped
    depends_on:
      postgres-infisical:
        condition: service_healthy
    networks:
      - main
    command: npm run migration:latest

  infisical:
    container_name: infisical
    image: infisical/infisical:latest-postgres
    env_file: .env.secrets
    pull_policy: always
    restart: unless-stopped
    depends_on:
      postgres-infisical:
        condition: service_healthy
      redis-infisical:
        condition: service_started
      infisical-migration:
        condition: service_healthy
    networks:
      - main
    ports:
      - ${INFISICAL_PORT_EXT}:${INFISICAL_PORT_INT}
    environment:
      - NODE_ENV=production
    labels:
      # traefik labels
      - traefik.enable=true
      - traefik.http.routers.infisical.entrypoints=web
      - traefik.http.routers.infisical.rule=Host(`infisical.${DOMAIN}`)
      - traefik.http.middlewares.infisical-redirect.redirectscheme.scheme=https
      - traefik.http.routers.infisical.middlewares=infisical-redirect
      - traefik.http.routers.infisical-secure.entrypoints=websecure
      - traefik.http.routers.infisical-secure.rule=Host(`infisical.${DOMAIN}`)
      - traefik.http.routers.infisical-secure.tls=true
      - traefik.http.services.infisical-service.loadbalancer.server.port=${INFISICAL_PORT_INT}
      # flame labels
      - flame.type=app
      - flame.name=infisical
      - flame.url=https://infisical.${DOMAIN}/
      - flame.icon=lock

volumes:
  postgres_infisical:
    driver: local
  redis_infisical:
    driver: local

networks:
  main:
    name: main
    external: true
