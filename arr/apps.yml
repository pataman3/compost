services:
  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    restart: unless-stopped
    network_mode: container:gluetun
    volumes:
      - /config/bazarr:/config
      - /libraries:/libraries
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    labels:
      # traefik labels
      - traefik.enable=true
      - traefik.http.routers.bazarr.entrypoints=web
      - traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)
      - traefik.http.middlewares.bazarr-redirect.redirectscheme.scheme=https
      - traefik.http.routers.bazarr.middlewares=bazarr-redirect
      - traefik.http.routers.bazarr-secure.entrypoints=websecure
      - traefik.http.routers.bazarr-secure.rule=Host(`bazarr.${DOMAIN}`)
      - traefik.http.routers.bazarr-secure.tls=true
      - traefik.http.services.bazarr-service.loadbalancer.server.port=${BAZARR_PORT_INT}
      # flame labels
      - flame.type=app
      - flame.name=bazarr
      - flame.url=https://bazarr.${DOMAIN}/
      - flame.icon=subtitles
  lidarr:
    container_name: lidarr
    image: lscr.io/linuxserver/lidarr:latest
    restart: unless-stopped
    network_mode: container:gluetun
    volumes:
      - /config/lidarr:/config
      - /libraries:/libraries
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    labels:
      # traefik labels
      - traefik.enable=true
      - traefik.http.routers.lidarr.entrypoints=web
      - traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)
      - traefik.http.middlewares.lidarr-redirect.redirectscheme.scheme=https
      - traefik.http.routers.lidarr.middlewares=lidarr-redirect
      - traefik.http.routers.lidarr-secure.entrypoints=websecure
      - traefik.http.routers.lidarr-secure.rule=Host(`lidarr.${DOMAIN}`)
      - traefik.http.routers.lidarr-secure.tls=true
      - traefik.http.services.lidarr-service.loadbalancer.server.port=${LIDARR_PORT_INT}
      # flame labels
      - flame.type=app
      - flame.name=lidarr
      - flame.url=https://lidarr.${DOMAIN}/
      - flame.icon=music
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: unless-stopped
    network_mode: container:gluetun
    volumes:
      - /config/prowlarr:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    labels:
      # traefik labels
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entrypoints=web
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)
      - traefik.http.middlewares.prowlarr-redirect.redirectscheme.scheme=https
      - traefik.http.routers.prowlarr.middlewares=prowlarr-redirect
      - traefik.http.routers.prowlarr-secure.entrypoints=websecure
      - traefik.http.routers.prowlarr-secure.rule=Host(`prowlarr.${DOMAIN}`)
      - traefik.http.routers.prowlarr-secure.tls=true
      - traefik.http.services.prowlarr-service.loadbalancer.server.port=${PROWLARR_PORT_INT}
      # flame labels
      - flame.type=app
      - flame.name=prowlarr
      - flame.url=https://prowlarr.${DOMAIN}/
      - flame.icon=file-find
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: container:gluetun
    volumes:
      - /config/radarr:/config
      - /libraries:/libraries
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    labels:
      # traefik labels
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=web
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.middlewares.radarr-redirect.redirectscheme.scheme=https
      - traefik.http.routers.radarr.middlewares=radarr-redirect
      - traefik.http.routers.radarr-secure.entrypoints=websecure
      - traefik.http.routers.radarr-secure.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr-secure.tls=true
      - traefik.http.services.radarr-service.loadbalancer.server.port=${RADARR_PORT_INT}
      # flame labels
      - flame.type=app
      - flame.name=radarr
      - flame.url=https://radarr.${DOMAIN}/
      - flame.icon=movie
  readarr:
    container_name: readarr
    image: lscr.io/linuxserver/readarr:develop
    restart: unless-stopped
    network_mode: container:gluetun
    volumes:
      - /config/readarr:/config
      - /libraries:/libraries
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    labels:
      # traefik labels
      - traefik.enable=true
      - traefik.http.routers.readarr.entrypoints=web
      - traefik.http.routers.readarr.rule=Host(`readarr.${DOMAIN}`)
      - traefik.http.middlewares.readarr-redirect.redirectscheme.scheme=https
      - traefik.http.routers.readarr.middlewares=readarr-redirect
      - traefik.http.routers.readarr-secure.entrypoints=websecure
      - traefik.http.routers.readarr-secure.rule=Host(`readarr.${DOMAIN}`)
      - traefik.http.routers.readarr-secure.tls=true
      - traefik.http.services.readarr-service.loadbalancer.server.port=${READARR_PORT_INT}
      # flame labels
      - flame.type=app
      - flame.name=readarr
      - flame.url=https://readarr.${DOMAIN}/
      - flame.icon=book-open-page-variant
  sonarr-1080:
    container_name: sonarr-1080
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: container:gluetun
    volumes:
      - /config/sonarr-1080:/config
      - /libraries/media/shows/1080:/shows/1080
      - /libraries/downloads/torrents/complete/sonarr-1080:/torrents/complete/sonarr-1080
      - /libraries/downloads/usenet/complete/sonarr-1080:/usenet/complete/sonarr-1080
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    labels:
      # traefik labels
      - traefik.enable=true
      - traefik.http.routers.sonarr-1080.entrypoints=web
      - traefik.http.routers.sonarr-1080.rule=Host(`sonarr-1080.${DOMAIN}`)
      - traefik.http.middlewares.sonarr-1080-redirect.redirectscheme.scheme=https
      - traefik.http.routers.sonarr-1080.middlewares=sonarr-1080-redirect
      - traefik.http.routers.sonarr-1080-secure.entrypoints=websecure
      - traefik.http.routers.sonarr-1080-secure.rule=Host(`sonarr-1080.${DOMAIN}`)
      - traefik.http.routers.sonarr-1080-secure.tls=true
      - traefik.http.services.sonarr-1080-service.loadbalancer.server.port=${SONARR_1080_PORT_INT}
      # flame labels
      - flame.type=app
      - flame.name=sonarr-1080
      - flame.url=https://sonarr-1080.${DOMAIN}/
      - flame.icon=television-classic
  sonarr-2160:
    container_name: sonarr-2160
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: container:gluetun
    volumes:
      - /config/sonarr-2160:/config
      - /libraries/media/shows/2160:/shows/2160
      - /libraries/downloads/torrents/complete/sonarr-2160:/torrents/complete/sonarr-2160
      - /libraries/downloads/usenet/complete/sonarr-2160:/usenet/complete/sonarr-2160
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    labels:
      # traefik labels
      - traefik.enable=true
      - traefik.http.routers.sonarr-2160.entrypoints=web
      - traefik.http.routers.sonarr-2160.rule=Host(`sonarr-2160.${DOMAIN}`)
      - traefik.http.middlewares.sonarr-2160-redirect.redirectscheme.scheme=https
      - traefik.http.routers.sonarr-2160.middlewares=sonarr-2160-redirect
      - traefik.http.routers.sonarr-2160-secure.entrypoints=websecure
      - traefik.http.routers.sonarr-2160-secure.rule=Host(`sonarr-2160.${DOMAIN}`)
      - traefik.http.routers.sonarr-2160-secure.tls=true
      - traefik.http.services.sonarr-2160-service.loadbalancer.server.port=${SONARR_2160_PORT_INT}
      # flame labels
      - flame.type=app
      - flame.name=sonarr-2160
      - flame.url=https://sonarr-2160.${DOMAIN}/
      - flame.icon=television-classic
  sonarr-anime:
    container_name: sonarr-anime
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: container:gluetun
    volumes:
      - /config/sonarr-anime:/config
      - /libraries/media/shows/anime:/shows/anime
      - /libraries/downloads/torrents/complete/sonarr-anime:/torrents/complete/sonarr-anime
      - /libraries/downloads/usenet/complete/sonarr-anime:/usenet/complete/sonarr-anime
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    labels:
      # traefik labels
      - traefik.enable=true
      - traefik.http.routers.sonarr-anime.entrypoints=web
      - traefik.http.routers.sonarr-anime.rule=Host(`sonarr-anime.${DOMAIN}`)
      - traefik.http.middlewares.sonarr-anime-redirect.redirectscheme.scheme=https
      - traefik.http.routers.sonarr-anime.middlewares=sonarr-anime-redirect
      - traefik.http.routers.sonarr-anime-secure.entrypoints=websecure
      - traefik.http.routers.sonarr-anime-secure.rule=Host(`sonarr-anime.${DOMAIN}`)
      - traefik.http.routers.sonarr-anime-secure.tls=true
      - traefik.http.services.sonarr-anime-service.loadbalancer.server.port=${SONARR_ANIME_PORT_INT}
      # flame labels
      - flame.type=app
      - flame.name=sonarr-anime
      - flame.url=https://sonarr-anime.${DOMAIN}/
      - flame.icon=television-classic